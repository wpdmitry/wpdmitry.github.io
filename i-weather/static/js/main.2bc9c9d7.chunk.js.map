{"version":3,"sources":["tools/date-toolkit.ts","tools/index.ts","services/weather-service/index.ts","tools/bcm.ts","tools/classnames.ts","services/weather-service/normalizers.ts","services/weather-service/weather-service.ts","components/loader/loader.module.scss","components/stub/stub.module.scss","blocks/day-weather/day-weather.module.scss","components/list/list.module.scss","blocks/days-weather/day-weather-item.module.scss","components/button/button.module.scss","components/tabs/tabs.module.scss","components/loader/loader.tsx","components/stub/stub.tsx","blocks/day-weather/day-weather.tsx","blocks/day-weather/day-weather-container.tsx","components/list/list.tsx","blocks/days-weather/day-weather-item.tsx","blocks/days-weather/days-weather-container.tsx","components/button/button.tsx","components/tabs/tabs.tsx","app.tsx","index.tsx"],"names":["format","date","locale","ru","fnsFormat","formatToWeekName","upper","name","toUpperCase","slice","args","filter","arg","join","weatherStates","normalizeWeatherItem","id","max_temp","min_temp","the_temp","created","weather_state_abbr","applicable_date","String","iconUrl","maxTemp","minTemp","temp","createdAt","Date","state","getCorsProxyingUrl","url","cache","itemIds","itemById","lastTimestamp","lastTimestampById","expireTime","getItems","this","now","map","saveItems","items","item","getKey","reduce","res","getItem","currentTimestamp","key","setItem","dateToolkit","getCityName","getWeatherByDays","weatherItems","fetch","then","reponse","json","weatherData","consolidated_weather","getWeatherByDay","weatherItem","dataPrams","formatTemp","roundTemp","Math","round","module","exports","b","bcm","styles","Loader","size","className","style","delay","useState","show","setShow","useEffect","timerId","setTimeout","clearTimeout","cn","Stub","children","DayWeather","title","src","alt","weatherService","DayWeatherContainer","weather","setWeather","loaded","setLoaded","error","setError","catch","message","List","data","itemRenderer","rowData","rowIndex","DayWeatherItem","DaysWeatherContainer","setWeatherItems","length","Button","rest","Tabs","initialIndex","tabs","currentIndex","setCurrentIndex","handleSwitch","useCallback","index","Component","component","tab","active","onClick","App","marginTop","DaysWeather","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bc9c9d7.chunk.js","sourcesContent":["import fnsFormat from \"date-fns/format\";\nimport { ru } from \"date-fns/locale\";\n\nfunction format(date: Date, format: string, { locale = ru }: { locale?: Locale } = {}) {\n  return fnsFormat(date, format, { locale });\n}\n\nfunction formatToWeekName(date: Date, upper = false) {\n  const name = format(date, \"eeee\");\n  return upper ? name[0].toUpperCase() + name.slice(1) : name;\n}\n\nexport default { format, formatToWeekName };","export { default as bcm } from \"./bcm\";\nexport { default as cn } from \"./classnames\";\nexport { default as dateToolkit } from \"./date-toolkit\";","export { default } from \"./weather-service\";\nexport * from \"./models\";","export { default } from \"bem-css-modules\";\n","export default (...args: any[]) =>\n  args.filter(arg => typeof arg === \"string\").join(\" \");\n","import { WeatherApiItem, WeatherItem } from \"./models\";\n\nconst weatherStates = {\n  \"sn\": \"snow\",\n  \"sl\": \"snow\",\n  \"h\": \"snow\",\n  \"t\": \"rain\",\n  \"hr\": \"rain\",\n  \"lr\": \"rain\",\n  \"s\": \"rain\",\n  \"hc\": \"cloudy\",\n  \"lc\": \"cloudy\",\n  \"c\": \"clear\"\n} as const;\n\nexport function normalizeWeatherItem({\n  id,\n  max_temp,\n  min_temp,\n  the_temp,\n  created,\n  weather_state_abbr,\n  applicable_date\n}: WeatherApiItem): WeatherItem {\n  return {\n    id: String(id),\n    iconUrl: `https://www.metaweather.com/static/img/weather/${weather_state_abbr}.svg`,\n    maxTemp: max_temp,\n    minTemp: min_temp,\n    temp: the_temp,\n    createdAt: new Date(created),\n    date: new Date(applicable_date),\n    state: weatherStates[weather_state_abbr]\n  };\n}\n","import { dateToolkit } from \"../../tools\";\n\nimport {\n  WeatherApiItem,\n  SummaryWeatherApiResponse,\n  WeatherItem\n} from \"./models\";\nimport { normalizeWeatherItem } from \"./normalizers\";\n\nfunction getCorsProxyingUrl(url: string) {\n  return `https://cors-anywhere.herokuapp.com/${url}`;\n}\n\ntype Cache = {\n  itemIds: string[];\n  itemById: { [key: string]: WeatherItem };\n  lastTimestamp: number;\n  lastTimestampById: { [key: string]: number };\n  expireTime: number;\n  getItems(): WeatherItem[] | null;\n  saveItems(items: WeatherItem[]): void;\n  getItem(date: Date): WeatherItem | null;\n  setItem(item: WeatherItem): void;\n  getKey(date: Date): string;\n};\n\nconst cache: Cache = {\n  itemIds: [],\n  itemById: {},\n  lastTimestamp: 0,\n  lastTimestampById: {},\n  expireTime: 60 * 1000,\n  getItems() {\n    const { lastTimestamp, itemIds, itemById } = this;\n\n    const currentTimestamp = Date.now();\n    const diff = currentTimestamp - lastTimestamp;\n\n    if (diff < this.expireTime) {\n      return itemIds.map(id => itemById[id]);\n    }\n\n    return null;\n  },\n  saveItems(items) {\n    this.itemIds = items.map(item => this.getKey(item.date));\n    this.itemById = items.reduce(\n      (res, item) => ({ ...res, [this.getKey(item.date)]: item }),\n      {}\n    );\n    this.lastTimestamp = Date.now();\n  },\n  getItem(date) {\n    const { lastTimestampById, itemById } = this;\n    const currentTimestamp = Date.now();\n    const key = this.getKey(date);\n    const lastTimestamp = lastTimestampById[key] || 0;\n    const diff = currentTimestamp - lastTimestamp;\n\n    if (diff < this.expireTime) {\n      return itemById[key];\n    }\n\n    return null;\n  },\n  setItem(item) {\n    const key = this.getKey(item.date);\n    this.itemById[key] = item;\n    this.lastTimestampById[key] = Date.now();\n  },\n  getKey(date) {\n    return dateToolkit.format(date, \"yyyy/MM/dd\");\n  }\n};\n\nexport default {\n  id: 2122265,\n  getCityName() {\n    return \"Москва\";\n  },\n  async getWeatherByDays() {\n    const weatherItems = cache.getItems();\n\n    if (weatherItems) {\n      return weatherItems;\n    }\n\n    return fetch(\n      getCorsProxyingUrl(`https://www.metaweather.com/api/location/${this.id}`)\n    )\n      .then<SummaryWeatherApiResponse>(reponse => reponse.json())\n      .then(weatherData => weatherData.consolidated_weather)\n      .then(weatherItems => weatherItems.map(normalizeWeatherItem))\n      .then(weatherItems => {\n        cache.saveItems(weatherItems);\n        return weatherItems;\n      });\n  },\n  async getWeatherByDay(date: Date = new Date()) {\n    const weatherItem = cache.getItem(date);\n\n    if (weatherItem) {\n      return weatherItem;\n    }\n\n    const dataPrams = dateToolkit.format(date, \"yyyy/MM/dd\");\n    return fetch(\n      getCorsProxyingUrl(\n        `https://www.metaweather.com/api/location/${this.id}/${dataPrams}`\n      )\n    )\n      .then<WeatherApiItem[]>(reponse => reponse.json())\n      .then<WeatherApiItem>(weatherItems => weatherItems[0])\n      .then(normalizeWeatherItem)\n      .then(weatherItem => {\n        cache.setItem(weatherItem);\n        return weatherItem;\n      });\n  },\n  formatTemp(temp: number): string {\n    const roundTemp = Math.round(temp);\n    return roundTemp > 0 ? `+${roundTemp}` : `${roundTemp}`;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2d6FG\",\"loader__content\":\"loader_loader__content__8mOs-\",\"spinner\":\"loader_spinner__3ExDN\",\"loader__content_size_xs\":\"loader_loader__content_size_xs__34K7h\",\"loader__content_size_xsmax\":\"loader_loader__content_size_xsmax__1pkFT\",\"loader__content_size_s\":\"loader_loader__content_size_s__q-kkA\",\"loader__content_size_m\":\"loader_loader__content_size_m__1goz4\",\"loader__content_size_l\":\"loader_loader__content_size_l__1FqUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stub\":\"stub_stub__1-kwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day-weather\":\"day-weather_day-weather__2mFRa\",\"day-weather__background\":\"day-weather_day-weather__background___CAZ0\",\"day-weather__background_state\":\"day-weather_day-weather__background_state__3j8MX\",\"day-weather__background_state_cloudy\":\"day-weather_day-weather__background_state_cloudy__1tAgv\",\"day-weather__background_state_snow\":\"day-weather_day-weather__background_state_snow__1OxFR\",\"day-weather__background_state_rain\":\"day-weather_day-weather__background_state_rain__spsaz\",\"day-weather__background_state_clear\":\"day-weather_day-weather__background_state_clear__Utlg8\",\"day-weather__icon\":\"day-weather_day-weather__icon__1TBrX\",\"day-weather__temperature\":\"day-weather_day-weather__temperature__OqDVh\",\"day-weather__time\":\"day-weather_day-weather__time__3qJ8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__2ZXKC\",\"list__item\":\"list_list__item__3BkQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day-weather-item\":\"day-weather-item_day-weather-item__2vekm\",\"day-weather-item_state\":\"day-weather-item_day-weather-item_state__3aqIb\",\"day-weather-item_state_cloudy\":\"day-weather-item_day-weather-item_state_cloudy__2nCTL\",\"day-weather-item_state_snow\":\"day-weather-item_day-weather-item_state_snow__3wiNF\",\"day-weather-item_state_rain\":\"day-weather-item_day-weather-item_state_rain__23wA1\",\"day-weather-item_state_clear\":\"day-weather-item_day-weather-item_state_clear__296KD\",\"day-weather-item__wrapper\":\"day-weather-item_day-weather-item__wrapper__3pRz9\",\"day-weather-item__weekday-name\":\"day-weather-item_day-weather-item__weekday-name__2F4E9\",\"day-weather-item__date\":\"day-weather-item_day-weather-item__date__1SzAF\",\"day-weather-item__spacer\":\"day-weather-item_day-weather-item__spacer__3r2JO\",\"day-weather-item__temperature\":\"day-weather-item_day-weather-item__temperature__2LvIv\",\"day-weather-item__icon\":\"day-weather-item_day-weather-item__icon__Mf2jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"tabs_tabs__1Mpj_\",\"tabs__switchers\":\"tabs_tabs__switchers__1zCIw\",\"tabs__switcher\":\"tabs_tabs__switcher__2-XYU\",\"tabs__switcher_active\":\"tabs_tabs__switcher_active__3YjYm\",\"tabs__content\":\"tabs_tabs__content__1YXpJ\"};","import React, { useState, useEffect } from \"react\";\n\nimport bcm from \"../../tools/bcm\";\nimport cn from \"../../tools/classnames\";\n\nimport styles from \"./loader.module.scss\";\n\nconst b = bcm(styles);\n\ntype LoaderProps = {\n  size?: \"s\" | \"m\" | \"l\";\n  className?: string;\n  style?: React.CSSProperties;\n  delay?: number;\n};\n\nfunction Loader({ size = \"s\", className, style, delay }: LoaderProps) {\n  const [show, setShow] = useState(!delay);\n\n  useEffect(() => {\n    if (show) return;\n\n    const timerId = setTimeout(() => setShow(true), delay);\n    return () => clearTimeout(timerId);\n  }, [show, delay, setShow]);\n\n  return (\n    <div className={cn(b(), className)} style={style}>\n      {show && <div className={b(\"content\", { size })} />}\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\n\nimport { bcm } from \"../../tools\";\n\nimport styles from \"./stub.module.scss\";\n\nconst b = bcm(styles);\n\ntype StubProps = {\n  style?: React.CSSProperties;\n  children: React.ReactChild;\n};\n\nfunction Stub({ style, children }: StubProps) {\n  return (\n    <div className={b()} style={style}>\n      {children}\n    </div>\n  );\n}\n\nexport default Stub;\n","import React from \"react\";\n\nimport { bcm, dateToolkit } from \"../../tools\";\nimport weatherService from \"../../services/weather-service\";\n\nimport styles from \"./day-weather.module.scss\";\n\nconst b = bcm(styles);\n\ntype DayWeatherProps = {\n  iconUrl: string;\n  temp: number;\n  date: Date;\n  title: string;\n  state: \"cloudy\" | \"rain\" | \"snow\" | \"clear\";\n};\n\nfunction DayWeather({ title, temp, iconUrl, date, state }: DayWeatherProps) {\n  return (\n    <div className={b()}>\n      <div className={b(\"background\", { state })} />\n      <img src={iconUrl} className={b(\"icon\")} alt=\"Иконка погоды\" />\n      <div className={b(\"temperature\")}>{weatherService.formatTemp(temp)}</div>\n      <div className={b(\"time\")}>{dateToolkit.format(date, \"HH:mm\")}</div>\n      <div className={b(\"location\")}>{title}</div>\n    </div>\n  );\n}\n\nexport default DayWeather;\n","import React, { useState, useEffect } from \"react\";\n\nimport Loader from \"../../components/loader\";\nimport Stub from \"../../components/stub\";\n\nimport weatherService, { WeatherItem } from \"../../services/weather-service\";\n\nimport DayWeather from \"./day-weather\";\n\nfunction DayWeatherContainer() {\n  const [weather, setWeather] = useState<WeatherItem>();\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    weatherService\n      .getWeatherByDay()\n      .then(weather => {\n        setWeather(weather);\n        setLoaded(true);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoaded(true);\n      });\n  }, [setWeather, setError, setLoaded]);\n\n  if (!loaded) return <Loader delay={50} />;\n  if (error) return <Stub>{error}</Stub>;\n  if (!weather) return <Stub>Данные отсутствуют</Stub>;\n\n  return (\n    <DayWeather\n      title={weatherService.getCityName()}\n      iconUrl={weather.iconUrl}\n      temp={weather.temp}\n      date={weather.createdAt}\n      state={weather.state}\n    />\n  );\n}\n\nexport default DayWeatherContainer;\n","import React from \"react\";\n\nimport { bcm } from \"../../tools\";\n\nimport styles from \"./list.module.scss\";\n\nconst b = bcm(styles);\n\ntype ListProps<T = any> = {\n  data: T[];\n  itemRenderer: ({\n    rowData,\n    rowIndex\n  }: {\n    rowData: T;\n    rowIndex: number;\n  }) => React.ReactElement;\n};\n\nfunction List<T>({ data, itemRenderer }: ListProps<T>) {\n  return (\n    <div className={b()}>\n      {data.map((rowData, rowIndex) => (\n        <div key={rowIndex} className={b(\"item\")}>\n          {itemRenderer({ rowData, rowIndex })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default List;\n","import React from \"react\";\n\nimport { bcm, dateToolkit } from \"../../tools\";\nimport weatherService from \"../../services/weather-service\";\n\nimport styles from \"./day-weather-item.module.scss\";\n\nconst b = bcm(styles);\n\ntype DayWeatherItemProps = {\n  date: Date;\n  iconUrl: string;\n  maxTemp: number;\n  minTemp: number;\n  state: \"cloudy\" | \"rain\" | \"snow\" | \"clear\";\n};\n\nfunction DayWeatherItem({\n  date,\n  iconUrl,\n  maxTemp,\n  minTemp,\n  state\n}: DayWeatherItemProps) {\n  return (\n    <div className={b({ state })}>\n      <div className={b(\"wrapper\")}>\n        <div>\n          <div className={b(\"weekday-name\")}>\n            {dateToolkit.formatToWeekName(date, true)}\n          </div>\n          <div className={b(\"date\")}>{dateToolkit.format(date, \"dd MMMM\")}</div>\n        </div>\n        <div className={b(\"spacer\")} />\n        <div className={b(\"temperature\")}>{`${weatherService.formatTemp(\n          maxTemp\n        )} / ${weatherService.formatTemp(minTemp)}`}</div>\n        <img src={iconUrl} className={b(\"icon\")} alt=\"Иконка погоды\" />\n      </div>\n    </div>\n  );\n}\n\nexport default DayWeatherItem;\n","import React, { useState, useEffect } from \"react\";\n\nimport List from \"../../components/list\";\nimport Loader from \"../../components/loader\";\nimport Stub from \"../../components/stub\";\n\nimport weatherService, { WeatherItem } from \"../../services/weather-service\";\n\nimport DayWeatherItem from \"./day-weather-item\";\n\nfunction DaysWeatherContainer() {\n  const [weatherItems, setWeatherItems] = useState<WeatherItem[]>();\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    weatherService\n      .getWeatherByDays()\n      .then(weatherItems => {\n        setWeatherItems(weatherItems);\n        setLoaded(true);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoaded(true);\n      });\n  }, [setWeatherItems, setLoaded, setError]);\n\n  if (!loaded) return <Loader delay={50} />;\n  if (error) return <Stub>{error}</Stub>;\n  if (!weatherItems || weatherItems.length === 0)\n    return <Stub>Данные отсутствуют</Stub>;\n\n  return (\n    <List\n      data={weatherItems}\n      itemRenderer={({ rowData }) => (\n        <DayWeatherItem\n          date={rowData.date}\n          minTemp={rowData.minTemp}\n          maxTemp={rowData.maxTemp}\n          iconUrl={rowData.iconUrl}\n          state={rowData.state}\n        />\n      )}\n    />\n  );\n}\n\nexport default DaysWeatherContainer;\n","import React from \"react\";\n\nimport { bcm, cn } from \"../../tools\";\n\nimport styles from \"./button.module.scss\";\n\nconst b = bcm(styles);\n\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nfunction Button({ className, ...rest }: ButtonProps) {\n  return <button className={cn(b(), className)} {...rest} />;\n}\n\nexport default Button;\n","import React, { useState, useCallback } from \"react\";\n\nimport { bcm } from \"../../tools\";\n\nimport Button from \"../button\";\n\nimport styles from \"./tabs.module.scss\";\n\nconst b = bcm(styles);\n\ntype TabsProps = {\n  initialIndex?: number;\n  tabs: Array<{ name: string; component: React.ComponentType }>;\n};\n\nfunction Tabs({ initialIndex = 0, tabs }: TabsProps) {\n  const [currentIndex, setCurrentIndex] = useState(initialIndex);\n\n  const handleSwitch = useCallback(\n    (index: number) => {\n      setCurrentIndex(index);\n    },\n    [setCurrentIndex]\n  );\n\n  const { component: Component } = tabs[currentIndex];\n\n  return (\n    <div className={b()}>\n      <div className={b(\"switchers\")}>\n        {tabs.map((tab, index) => (\n          <Button\n            key={index}\n            className={b(\"switcher\", { active: index === currentIndex })}\n            onClick={() => handleSwitch(index)}\n          >\n            {tab.name}\n          </Button>\n        ))}\n      </div>\n      <div className={b(\"content\")}>\n        <Component />\n      </div>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import React from \"react\";\n\nimport DayWeather from \"./blocks/day-weather\";\nimport DaysWeather from \"./blocks/days-weather\";\nimport Tabs from \"./components/tabs\";\n\nfunction App() {\n  return (\n    <div style={{ marginTop: 100 }}>\n      <Tabs\n        tabs={[\n          { name: \"Сегодня\", component: DayWeather },\n          {\n            name: \"Неделя\",\n            component: DaysWeather\n          }\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}